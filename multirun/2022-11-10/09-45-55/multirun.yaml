hydra:
  run:
    dir: ./outputs/${name}-${model.name}/${model.name}_${now:%Y-%m-%d-%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra: []
    task:
    - dataset.augmentation.aug2.p=0.0,0.1,0.2,0.3
  job:
    name: main
    override_dirname: dataset.augmentation.aug2.p=0.0,0.1,0.2,0.3
    id: ???
    num: ???
    config_name: baseline
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.1.0
    cwd: /data/huyvt/zaloai2022/ZaloAIChallenge-2022
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /data/huyvt/zaloai2022/ZaloAIChallenge-2022/configs
      schema: file
      provider: main
    - path: hydra_plugins.hydra_colorlog.conf
      schema: pkg
      provider: hydra-colorlog
    - path: ''
      schema: structured
      provider: schema
    choices:
      model: swin_base_patch4_window12_384
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
model:
  name: swin_base_patch4_window12_384
  sync_dist: true
  arch:
    _target_: src.networks.SwinTransformer
    n_class: 2
    model_name: swin_base_patch4_window12_384
    pretrained: true
  monitor: val/loss
  loss:
    _target_: torch.nn.CrossEntropyLoss
    label_smoothing: 0.1
  optimizer:
    _target_: torch.optim.AdamW
    lr: 3.0e-05
    weight_decay: 1.0e-06
  lr_scheduler:
    _target_: torch.optim.lr_scheduler.StepLR
    step_size: 5
    gamma: 0.2
name: baseline
state: train
seed: 42
work_dir: ${hydra:runtime.cwd}
logging:
  root: ./logs
dataset:
  train_list: ${work_dir}/data/train/train.csv
  val_list: ${work_dir}/data/train/val.csv
  data_dir: ${work_dir}/data
  crop_size: 384
  batch_size: 8
  num_workers: 4
  pin_memory: true
  augmentation:
    aug1:
      _target_: torchvision.transforms.RandomHorizontalFlip
      p: 0.5
    aug2:
      _target_: torchvision.transforms.RandomVerticalFlip
      p: 0.2
    aug3:
      _target_: torchvision.transforms.ColorJitter
      brightness: 0.3
      contrast: 0.0
      saturation: 0.0
      hue: 0.0
trainer:
  precision: 16
  accelerator: gpu
  devices: -1
  num_nodes: 1
  strategy: null
  benchmark: true
  sync_batchnorm: false
  max_epochs: 20
refresh_rate: 10
model_ckpt:
  dirpath: ckpts/
  filename: checkpoint-epoch{epoch}-step{step}-val_acc{val/acc:.3f}-val_loss{val/loss:.3f}
  monitor: ${model.monitor}
  save_last: true
  save_top_k: 2
  mode: min
  auto_insert_metric_name: false
ddp_plugin:
  find_unused_params: true
  fp16_hook: true
  static_graph: false
