name: baseline
state: train # train/test/debug
seed: 42

# path to original working directory
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have this path as a special variable
# https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: ${hydra:runtime.cwd}

logging:
  root: ./logs

defaults:
  - model: swin_large_patch4_window12_384_h
  - _self_

dataset:
  train_list: ${work_dir}/data/train/train_8_2.csv
  val_list: ${work_dir}/data/vis_val/val.csv
  data_dir: ${work_dir}/data
  crop_size: 384
  batch_size: 16
  num_workers: 4
  pin_memory: True
  augmentation:
    aug0:
      _target_: torchvision.transforms.RandomResizedCrop
      size: ${dataset.crop_size}
      scale:
        - 0.49
        - 1.0
    aug1:
      _target_: torchvision.transforms.RandomHorizontalFlip
      p: 0.5
    aug2:
      _target_: torchvision.transforms.GaussianBlur
      kernel_size: 3
      sigma:
        - 0.2
        - 2.0
    aug3:
      _target_: torchvision.transforms.RandomVerticalFlip
      p: 0.2
    aug4:
      _target_: torchvision.transforms.ColorJitter
      brightness: 0.0
      contrast: 0.2
      saturation: 0.0
      hue: 0.0
    # aug4:
    #   _target_: torchvision.transforms.RandomPosterize
    #   bits: 7
  val_augmentation:
    aug0:
      _target_: torchvision.transforms.RandomResizedCrop
      size: ${dataset.crop_size}
      scale:
        - 0.49
        - 1.0
    aug1:
      _target_: torchvision.transforms.RandomHorizontalFlip
      p: 0.5
    aug2:
      _target_: torchvision.transforms.GaussianBlur
      kernel_size: 3
      sigma:
        - 0.2
        - 2.0
    aug3:
      _target_: torchvision.transforms.RandomVerticalFlip
      p: 0.2
    aug4:
      _target_: torchvision.transforms.ColorJitter
      brightness: 0.0
      contrast: 0.2
      saturation: 0.0
      hue: 0.0
    # aug4:
    #   _target_: torchvision.transforms.RandomPosterize
    #   bits: 7

trainer:
  # GPU related
  precision: 16
  accelerator: gpu
  devices: -1
  num_nodes: 1
  strategy: null #ddp if we want to use Multi-GPUs
  benchmark: True
  sync_batchnorm: False
  # Training related
  # max_steps: 100000
  # max_epochs: 40
  max_steps: 12000
  # limit_train_batches: 1.0
  # gradient_clip_val: 0.1 # gradient clipping max norm
  # gradient_clip_algorithm: "norm"

# Logging, progress bar
refresh_rate: 10

model_ckpt:
  dirpath: ckpts/
  filename: "checkpoint-epoch{epoch}-step{step}-val_acc{val/acc:.3f}-val_loss{val/loss:.3f}"
  monitor: ${model.monitor}
  save_last: True
  save_top_k: 2
  mode: min
  auto_insert_metric_name: False

ddp_plugin:
  # These two args only work with accelerator = "ddp"
  find_unused_params: True # FIXME: Find out why turn this to False will fail to launch the training
  fp16_hook: True
  static_graph: False

hydra:
  run:
    dir: ./outputs/h
  sweep:
    dir: ./multirun/${name}-${model.name}
    subdir: ${now:%Y-%m-%d-%H-%M-%S}
  sweeper:
    params:
      model.optimizer.lr: 1e-5,3e-5,5e-5,1e-6
      model.lr_scheduler.T_0: 200,300,400,600
      model.lr_scheduler.eta_min: 1e-7,3e-7,5e-7
